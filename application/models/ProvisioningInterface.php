<?php

/*
 * Copyright (C) 2009-2011 Internet Neutral Exchange Association Limited.
 * All Rights Reserved.
 * 
 * This file is part of IXP Manager.
 * 
 * IXP Manager is free software: you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation, version v2.0 of the License.
 * 
 * IXP Manager is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 * more details.
 * 
 * You should have received a copy of the GNU General Public License v2.0
 * along with IXP Manager.  If not, see:
 * 
 * http://www.gnu.org/licenses/gpl-2.0.html
 */


/**
 * ProvisioningInterface
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: ProvisioningInterface.php 446 2011-05-26 13:40:19Z barryo $
 */
class ProvisioningInterface extends BaseProvisioningInterface
{

    public function setUp()
    {
        parent::setUp();

        $this->hasOne( 'Cust',              array( 'local' => 'cust_id',              'foreign' => 'id' ) );
        $this->hasOne( 'User as CreatedBy', array( 'local' => 'created_by',           'foreign' => 'id' ) );
        $this->hasOne( 'Virtualinterface',  array( 'local' => 'virtualinterface_id',  'foreign' => 'id' ) );
        $this->hasOne( 'Physicalinterface', array( 'local' => 'physicalinterface_id', 'foreign' => 'id' ) );
        $this->hasOne( 'Vlaninterface',     array( 'local' => 'vlaninterface_id',     'foreign' => 'id' ) );
    }



    /**
     * Override the save() method to calculate whethere we're complete or not
     */
    public function save( $conn = null )
    {
        if(
	                $this['cust_id']
	             && $this['virtualinterface_id']
	             && $this['physicalinterface_id']
	             && $this['vlaninterface_id']
	             && $this['mail_sent']
	             && $this['switch_config']
	             && $this['quarantine_start'] != null
	             && $this['quarantine_end'] != null
             )
         {
             $this['complete'] = 1;
         }
         else
         {
             $this['complete'] = 0;
         }

         parent::save( $conn );
    }


    /**
     * Calculate the number of steps completed
     */
    public function stepsComplete()
    {
        $fields = array( 'cust_id', 'virtualinterface_id', 'physicalinterface_id', 'vlaninterface_id',
            'mail_sent', 'switch_config', 'quarantine_start', 'quarantine_end'
        );

        $progress = 0;
        foreach( $fields as $f )
            if( $this[$f] )
                $progress += 1;

        return $progress . "/" . count( $fields );
    }

}
